# GNU Make project makefile autogenerated by GENie
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(MAKESHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
  MKDIR = $(SILENT) mkdir -p "$(1)"
  COPY  = $(SILENT) cp -fR "$(1)" "$(2)"
  RM    = $(SILENT) rm -f "$(1)"
else
  MKDIR = $(SILENT) mkdir "$(subst /,\\,$(1))" 2> nul || exit 0
  COPY  = $(SILENT) copy /Y "$(subst /,\\,$(1))" "$(subst /,\\,$(2))"
  RM    = $(SILENT) del /F "$(subst /,\\,$(1))" 2> nul || exit 0
endif

CC  = gcc
CXX = g++
AR  = ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

MAKEFILE = Makefile

ifeq ($(config),debug)
  OBJDIR              = obj/Debug
  TARGETDIR           = bin
  TARGET              = $(TARGETDIR)/Client
  DEFINES            += -D__PLATFORM_MACOSX__ -D_GLFW_COCOA -D_GLFW_NSGL -D_GLFW_USE_OPENGL -DDEBUG
  INCLUDES           += -I"include" -I"dependencies" -I"dependencies/glew/include" -I"dependencies/GLFW/deps"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L. -framework Cocoa -framework QuartzCore -framework OpenGL -framework OpenAL
  LDDEPS             +=
  LIBS               += $(LDDEPS) -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo
  EXTERNAL_LIBS      +=
  LINKCMD             = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o \
	$(OBJDIR)/dependencies/GLFW/src/context.o \
	$(OBJDIR)/dependencies/GLFW/src/init.o \
	$(OBJDIR)/dependencies/GLFW/src/input.o \
	$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o \
	$(OBJDIR)/dependencies/GLFW/src/mach_time.o \
	$(OBJDIR)/dependencies/GLFW/src/monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o \
	$(OBJDIR)/dependencies/GLFW/src/posix_tls.o \
	$(OBJDIR)/dependencies/GLFW/src/window.o \
	$(OBJDIR)/dependencies/glew/include/glew.o \
	$(OBJDIR)/src/main.o \
	$(OBJDIR)/src/sockets.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR              = obj/Release
  TARGETDIR           = bin
  TARGET              = $(TARGETDIR)/Client
  DEFINES            += -D__PLATFORM_MACOSX__ -D_GLFW_COCOA -D_GLFW_NSGL -D_GLFW_USE_OPENGL -DNDEBUG
  INCLUDES           += -I"include" -I"dependencies" -I"dependencies/glew/include" -I"dependencies/GLFW/deps"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L. -framework Cocoa -framework QuartzCore -framework OpenGL -framework OpenAL
  LDDEPS             +=
  LIBS               += $(LDDEPS) -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo
  EXTERNAL_LIBS      +=
  LINKCMD             = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o \
	$(OBJDIR)/dependencies/GLFW/src/context.o \
	$(OBJDIR)/dependencies/GLFW/src/init.o \
	$(OBJDIR)/dependencies/GLFW/src/input.o \
	$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o \
	$(OBJDIR)/dependencies/GLFW/src/mach_time.o \
	$(OBJDIR)/dependencies/GLFW/src/monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o \
	$(OBJDIR)/dependencies/GLFW/src/posix_tls.o \
	$(OBJDIR)/dependencies/GLFW/src/window.o \
	$(OBJDIR)/dependencies/glew/include/glew.o \
	$(OBJDIR)/src/main.o \
	$(OBJDIR)/src/sockets.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR              = obj/x64/Debug
  TARGETDIR           = bin
  TARGET              = $(TARGETDIR)/Client
  DEFINES            += -D__PLATFORM_MACOSX__ -D_GLFW_COCOA -D_GLFW_NSGL -D_GLFW_USE_OPENGL -DDEBUG
  INCLUDES           += -I"include" -I"dependencies" -I"dependencies/glew/include" -I"dependencies/GLFW/deps"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m64
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m64
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m64 -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m64
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m64 -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L. -m64 -framework Cocoa -framework QuartzCore -framework OpenGL -framework OpenAL
  LDDEPS             +=
  LIBS               += $(LDDEPS) -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo
  EXTERNAL_LIBS      +=
  LINKCMD             = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o \
	$(OBJDIR)/dependencies/GLFW/src/context.o \
	$(OBJDIR)/dependencies/GLFW/src/init.o \
	$(OBJDIR)/dependencies/GLFW/src/input.o \
	$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o \
	$(OBJDIR)/dependencies/GLFW/src/mach_time.o \
	$(OBJDIR)/dependencies/GLFW/src/monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o \
	$(OBJDIR)/dependencies/GLFW/src/posix_tls.o \
	$(OBJDIR)/dependencies/GLFW/src/window.o \
	$(OBJDIR)/dependencies/glew/include/glew.o \
	$(OBJDIR)/src/main.o \
	$(OBJDIR)/src/sockets.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR              = obj/x64/Release
  TARGETDIR           = bin
  TARGET              = $(TARGETDIR)/Client
  DEFINES            += -D__PLATFORM_MACOSX__ -D_GLFW_COCOA -D_GLFW_NSGL -D_GLFW_USE_OPENGL -DNDEBUG
  INCLUDES           += -I"include" -I"dependencies" -I"dependencies/glew/include" -I"dependencies/GLFW/deps"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m64
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m64
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m64 -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m64
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m64 -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L. -m64 -framework Cocoa -framework QuartzCore -framework OpenGL -framework OpenAL
  LDDEPS             +=
  LIBS               += $(LDDEPS) -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo
  EXTERNAL_LIBS      +=
  LINKCMD             = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o \
	$(OBJDIR)/dependencies/GLFW/src/context.o \
	$(OBJDIR)/dependencies/GLFW/src/init.o \
	$(OBJDIR)/dependencies/GLFW/src/input.o \
	$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o \
	$(OBJDIR)/dependencies/GLFW/src/mach_time.o \
	$(OBJDIR)/dependencies/GLFW/src/monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o \
	$(OBJDIR)/dependencies/GLFW/src/posix_tls.o \
	$(OBJDIR)/dependencies/GLFW/src/window.o \
	$(OBJDIR)/dependencies/glew/include/glew.o \
	$(OBJDIR)/src/main.o \
	$(OBJDIR)/src/sockets.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug32)
  OBJDIR              = obj/x32/Debug
  TARGETDIR           = bin
  TARGET              = $(TARGETDIR)/Client
  DEFINES            += -D__PLATFORM_MACOSX__ -D_GLFW_COCOA -D_GLFW_NSGL -D_GLFW_USE_OPENGL -DDEBUG
  INCLUDES           += -I"include" -I"dependencies" -I"dependencies/glew/include" -I"dependencies/GLFW/deps"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m32
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m32
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m32 -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m32
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -g -Wall -Wextra -m32 -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L. -m32 -framework Cocoa -framework QuartzCore -framework OpenGL -framework OpenAL
  LDDEPS             +=
  LIBS               += $(LDDEPS) -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo
  EXTERNAL_LIBS      +=
  LINKCMD             = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o \
	$(OBJDIR)/dependencies/GLFW/src/context.o \
	$(OBJDIR)/dependencies/GLFW/src/init.o \
	$(OBJDIR)/dependencies/GLFW/src/input.o \
	$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o \
	$(OBJDIR)/dependencies/GLFW/src/mach_time.o \
	$(OBJDIR)/dependencies/GLFW/src/monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o \
	$(OBJDIR)/dependencies/GLFW/src/posix_tls.o \
	$(OBJDIR)/dependencies/GLFW/src/window.o \
	$(OBJDIR)/dependencies/glew/include/glew.o \
	$(OBJDIR)/src/main.o \
	$(OBJDIR)/src/sockets.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR              = obj/x32/Release
  TARGETDIR           = bin
  TARGET              = $(TARGETDIR)/Client
  DEFINES            += -D__PLATFORM_MACOSX__ -D_GLFW_COCOA -D_GLFW_NSGL -D_GLFW_USE_OPENGL -DNDEBUG
  INCLUDES           += -I"include" -I"dependencies" -I"dependencies/glew/include" -I"dependencies/GLFW/deps"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m32
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m32
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m32 -std=c++11
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m32
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -O2 -Wall -Wextra -m32 -std=c++11
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L. -m32 -framework Cocoa -framework QuartzCore -framework OpenGL -framework OpenAL
  LDDEPS             +=
  LIBS               += $(LDDEPS) -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo
  EXTERNAL_LIBS      +=
  LINKCMD             = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(ALL_LDFLAGS) $(LIBS)
  OBJECTS := \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o \
	$(OBJDIR)/dependencies/GLFW/src/context.o \
	$(OBJDIR)/dependencies/GLFW/src/init.o \
	$(OBJDIR)/dependencies/GLFW/src/input.o \
	$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o \
	$(OBJDIR)/dependencies/GLFW/src/mach_time.o \
	$(OBJDIR)/dependencies/GLFW/src/monitor.o \
	$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o \
	$(OBJDIR)/dependencies/GLFW/src/posix_tls.o \
	$(OBJDIR)/dependencies/GLFW/src/window.o \
	$(OBJDIR)/dependencies/glew/include/glew.o \
	$(OBJDIR)/src/main.o \
	$(OBJDIR)/src/sockets.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJDIRS := \
	$(OBJDIR) \
	$(OBJDIR)/dependencies/GLFW/src \
	$(OBJDIR)/dependencies/glew/include \
	$(OBJDIR)/src \

RESOURCES := \

.PHONY: clean prebuild prelink

all: $(OBJDIRS) $(TARGETDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(EXTERNAL_LIBS) $(RESOURCES) | $(TARGETDIR) $(OBJDIRS)
	@echo Linking Client
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
	-$(call MKDIR,$(TARGETDIR))

$(OBJDIRS):
	@echo Creating $(@)
	-$(call MKDIR,$@)

clean:
	@echo Cleaning Client
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) -x c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"

$(GCH_OBJC): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCPPFLAGS) -x objective-c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"
endif

$(OBJDIR)/dependencies/GLFW/src/cocoa_init.o: dependencies/GLFW/src/cocoa_init.m $(GCH_OBJC) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCFLAGS) $(FORCE_INCLUDE_OBJC) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/cocoa_monitor.o: dependencies/GLFW/src/cocoa_monitor.m $(GCH_OBJC) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCFLAGS) $(FORCE_INCLUDE_OBJC) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/cocoa_window.o: dependencies/GLFW/src/cocoa_window.m $(GCH_OBJC) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCFLAGS) $(FORCE_INCLUDE_OBJC) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/context.o: dependencies/GLFW/src/context.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/glx_context.o: dependencies/GLFW/src/glx_context.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/init.o: dependencies/GLFW/src/init.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/input.o: dependencies/GLFW/src/input.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/iokit_joystick.o: dependencies/GLFW/src/iokit_joystick.m $(GCH_OBJC) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCFLAGS) $(FORCE_INCLUDE_OBJC) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/linux_joystick.o: dependencies/GLFW/src/linux_joystick.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/mach_time.o: dependencies/GLFW/src/mach_time.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/monitor.o: dependencies/GLFW/src/monitor.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/nsgl_context.o: dependencies/GLFW/src/nsgl_context.m $(GCH_OBJC) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCFLAGS) $(FORCE_INCLUDE_OBJC) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/posix_time.o: dependencies/GLFW/src/posix_time.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/posix_tls.o: dependencies/GLFW/src/posix_tls.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/window.o: dependencies/GLFW/src/window.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/x11_init.o: dependencies/GLFW/src/x11_init.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/x11_monitor.o: dependencies/GLFW/src/x11_monitor.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/x11_window.o: dependencies/GLFW/src/x11_window.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/GLFW/src/xkb_unicode.o: dependencies/GLFW/src/xkb_unicode.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/dependencies/glew/include/glew.o: dependencies/glew/include/glew.c $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/main.o: src/main.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/src/sockets.o: src/sockets.cpp $(GCH) $(MAKEFILE)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
  -include $(OBJDIR)/$(notdir $(PCH))_objc.d
endif
